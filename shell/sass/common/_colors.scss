//
// When color definition differs for dark and light variant,
// it gets @if ed depending on $variant
//

//
// A Color palette
//
// Pop uses the System76 palette

$almost_white:      #f2f2f2;
$warm_gray:         #574f4a;
$dark_gray:         #574e4a;
$dark_neutral_gray: #333;
$light_gray:        #999;
$literally_black:   #000;
$medium_gray:       #888;
$white:             #fff;


// Brand Colors
$orange: #faa41a; // Pantone 137c  #eaa124
$blue:   #48b9c7; // Pantone 7709c #62b5bb
$yellow: #ffce51; // Pantone 1225c #f2c150
$red:    #f15d22; // Pantone 1665c #df6426
$green:  #73c48f; // Confirmation/success

$black: $warm_gray;

@function shellopacity($c, $a) {
  @return scale-color($c, $alpha: percentage(-1 + $a));
}

// Import key colour-scheme defined at build-time.
@import 'key_colors';

//
// Foreground colors
//

$fg_color: if($nokto == 'false', #263238, #CFD8DC);
$secondary_fg_color: shellopacity($fg_color, 0.75);

$dim_fg_color: shellopacity($text_color, 0.4);

$selected_fg_color: #FFFFFF;
$secondary_selected_fg_color: shellopacity($selected_fg_color, 0.85);

$insensitive_text_color: shellopacity($text_color, 0.4);
$insensitive_text80_color: shellopacity($text80_color, 0.4);


//
// Inverted foreground colors
//

$inverted_fg_color: if($nokto == 'false', #CFD8DC, #263238);
$inverted_secondary_fg_color: shellopacity($inverted_fg_color, 0.75);
$inverted_dim_fg_color: shellopacity($inverted_fg_color, 0.4);


//
// Background colors
//

$bg_color: if($nokto == 'false', #FAFBFC, #263238);
$base_color: if($nokto == 'false', #FFFFFF, #29353B);
$secondary_base_color: if($nokto == 'false', #FDFDFE, #28343A);
$secondary_dark_color: if($nokto == 'false', #ECEFF1, #243035);

$fill_color: shellopacity($text_color, 0.15);
$semi_fill_color: shellopacity($text_color, 0.07);
$hidden_fill_color: rgba(0, 0, 0, 0.01);

$panel_bg_color: mix($black, $literally_black, 50%);
$panel_hidden_fill_color: rgba(22, 22, 22, 0.01);
$panel_fill_color: rgba(22, 22, 22, 1.0);

$blue_color: $key_selection_color;

$blue_label_color: if($nokto == 'false',
                        mix($blue_color, $text_color, 80%),
                        mix($blue_color, $text_color, 60%));
$secondary_blue_color: shellopacity($blue_color, 0.8);
$secondary_blue_label_color: shellopacity($blue_label_color, 0.8);
$insensitive_blue_label_color: shellopacity($blue_label_color, 0.4);

$blue_fill_color: shellopacity($blue_color, 0.1);
$blue_active_fill_color: shellopacity($blue_color, 0.25);

$inverted_blue_label_color: if($nokto == 'false',
                              mix($blue_color, $dark_text_color, 60%),
                              mix($blue_color, $text_color, 60%));
$inverted_secondary_blue_label_color:
  shellopacity($inverted_blue_label_color, 0.8);

$insensitive_bg_color: mix($bg_color, $base_color, 60%);
$insensitive_fill_color: shellopacity($fill_color, 0.4);


//
// Inverted background colors
//

$inverted_bg_color: if($nokto == 'false', #263238, #FAFBFC);
$inverted_base_color: #29353B;
$inverted_dim_bg_color: shellopacity($inverted_bg_color, 0.2);


//
// Accent colors
//

$orange_color: $key_accent_color;
$orange_label_color: if($nokto == 'false',
                        mix($orange_color, $text_color, 80%),
                        mix($orange_color, $text_color, 60%));
$secondary_orange_color: shellopacity($orange_color, 0.8);
$secondary_orange_label_color: shellopacity($orange_label_color, 0.8);
$insensitive_orange_label_color: shellopacity($orange_label_color, 0.4);

$orange_fill_color: shellopacity($orange_color, 0.1);
$orange_active_fill_color: shellopacity($orange_color, 0.25);

$inverted_orange_label_color: if($nokto == 'false',
                              mix($orange_color, $dark_text_color, 60%),
                              mix($orange_color, $text_color, 60%));
$inverted_secondary_orange_label_color:
  shellopacity($inverted_orange_label_color, 0.8);


//
// Misc colors
//

$borders_color: if($nokto == 'false', shellopacity(#000000, 0.09),
                                      shellopacity(#000000, 0.13));
$borders_edge: shellopacity(#000000, 0.05);
$top_hilight: $borders_edge;
$borders_highlight: shellopacity(#FFFFFF, 0.07);
$menu_highlight: if($nokto == 'false',
                    $base_color,
                    mix($secondary_base_color, #FFFFFF, 98%));
$insensitive_borders_color: $borders_color;

$link_color: $orange;
$link_visited_color: darken($orange, 0.5);

$warning_color: $red;
$error_color: $yellow;
$success_color: $blue;

$suggested_color: $key_suggestion_color;


//
// OSD Foreground colors
//

$osd_fg_color: if($nokto == 'false', $dark_text_color, $text_color);
$osd_secondary_fg_color: shellopacity($osd_fg_color, 0.75);

$osd_dim_fg_color: shellopacity($osd_fg_color, 0.5);

$insensitive_osd_fg_color: shellopacity($osd_fg_color, 0.4);
$insensitive_osd_secondary_fg_color: shellopacity($osd_secondary_fg_color, 0.4);


//
// OSD Background colors
//

$osd_bg_color: mix(#263238, #000000, 90%);
$osd_base_color: if($nokto == 'false', $inverted_base_color, $bg_color);

$osd_fill_color: shellopacity($osd_fg_color, 0.4);
$osd_semi_fill_color: shellopacity($osd_fg_color, 0.2);
$osd_slight_fill_color: shellopacity($osd_fg_color, 0.12);

$osd_indicator_color: $orange_color;

$osd_borders_color: $borders_color;
$osd_outer_borders_color: transparent;
$tooltip_borders_color: $osd_borders_color;

$insensitive_osd_fill_color: shellopacity($osd_fill_color, 0.4);

